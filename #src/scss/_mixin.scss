// Стандартный набор брейкпойнтов----------------------------------------------
	// Только принтеры=========================================================
	@mixin for-print-only {
		@media print { @content; }
	}
	// Только телефон==========================================================
	@mixin for-phone-only {
		@media (max-width: 576px) { @content; }
	}
	// Планшет портрет и более=================================================
	@mixin for-tablet-portrait-up {
		@media (min-width: 768px) { @content; }
	}
	// Планшет альбом и маленький монитор======================================
	@mixin for-tablet-landscape-and-mini-desktop-up {
		@media (min-width: 992px) { @content; }
	}
	// Обычные мониторы========================================================
	@mixin for-desktop-up {
		@media (min-width: 1200px) { @content; }
	}
	// Большие мониторы========================================================
	@mixin for-big-desktop-up {
		@media (min-width: 1400px) { @content; }
	}
//-----------------------------------------------------------------------------

//inline-block wrapper---------------------------------------------------------
	@mixin inline-block-wrapper {
		font-size: 0;
		line-height: 0;
		letter-spacing: -1px;
	}
//-----------------------------------------------------------------------------

//apperance--------------------------------------------------------------------
	@mixin appearance($value: button) {
		-moz-appearance: $value;
		-webkit-appearance: $value;
		appearance: $value;
	}
//-----------------------------------------------------------------------------

//z-index----------------------------------------------------------------------
	@function z-index($key) {
		@return map-get($z-index, $key);
	}

	@mixin z-index($key) {
		z-index: z-index($key);
	}
//-----------------------------------------------------------------------------

//flexbox----------------------------------------------------------------------
	// Быстрый вызов flexbox с префиксами======================================
	@mixin fast-flex() {
		display: -webkit-box;
		display: -moz-box;
		display: -ms-flexbox;
		display: -o-flex;
		display: flex;
		@content;
	}
	// Дополнительные настройки для flexbox====================================
	@mixin flex-setting($flex-direction : row, $flex-wrap: wrap, $content : space-between, $align-items : flex-start,$align-content : flex-start) {
		flex-direction: $flex-direction;
		flex-wrap: $flex-wrap;
		justify-content: $content;
		align-content: $align-content;
		align-items: $align-items;
		@content;
	}
	//Настройка элемента в flex контейнере=======================================
	@mixin flex-elem($grow:0, $shrink:1, $basis:100%) {
		flex: $grow $shrink $basis;
	}
//-----------------------------------------------------------------------------

//Позиционирование-------------------------------------------------------------
	//Позиционирование контента и внешние отступы==============================
	@mixin content-positioning($text-align: center, $max-width:100%, $margin_vertical:1em, $margin_horizontal: auto) {
		text-align: $text-align;
		max-width: $max-width;
		margin: $margin_vertical $margin_horizontal;
	}
	//Быстрые паддинги=========================================================
	@mixin padding($top:0, $right:0, $bottom:0, $left:0) {
		padding: #{$top}% #{$right}% #{$bottom}% #{$left}%;
	}

//-----------------------------------------------------------------------------

//Grid-------------------------------------------------------------------------

//-----------------------------------------------------------------------------

//Фигуры-----------------------------------------------------------------------
	// Круг/овал/прямоугольник/квадрат/линия===================================
	@mixin figure-set-1($width:1rem, $height:1rem, $bg-color:#fff, $b-radius:0%) {
		content: "";
		width: $width;
		height: height;
		background-color: $bg-color;
		border-radius: $b-radius;
		@content;
	}
	// Равносторонний треугольник/тропеция=====================================
	@mixin triangle-equilateral($border_size:1rem, $color:$white, $width:0) {
		content:"";
		width: $width;
		height: 0;
		border-left: $border_size solid transparent;
		border-right: $border_size solid transparent;
		border-top: $border_size solid $color;
		@content;
	}
	// Прямоугольный треугольник===============================================
	@mixin triangle-right ($border_size:1rem, $color:$white) {
		width: 0;
		height: 0;
		border-top: $border_size solid $color; 
		border-left: $border_size solid transparent;
		@content;
	}
	// Узкий треугольник=======================================================
	@mixin triangle-narrow($border_size:1rem, $color:$black){
		$narrow_size: $border_size/2;
		border: $narrow_size solid transparent;
		border-left: $border_size solid $color;
		@content;
	}
	//Стрелка==================================================================
	@mixin arrow($width:1rem,$arrow_width:.1rem, $color:$black, $direction){
		width: $width;
		height: $width;
		@mixin rotate(45deg);
		
		@if $direction == top {
			border-left: $arrow_wight solid $color;
			border-top: $arrow_width solid $color;
			border-bottom: 0;
			border-right: 0;
		}
		@if $direction == right {
			border-top: $arrow_wight solid $color;
			border-right: $arrow_width solid $color;
			border-bottom: 0;
			border-left: 0;
		}
		@if $direction == bottom {
			border-right: $arrow_wight solid $color;
			border-bottom: $arrow_width solid $color;
			border-top: 0;
			border-left: 0;
		}
		@if $direction == left {
			border-bottom: $arrow_wight solid $color;
			border-left: $arrow_width solid $color;
			border-top: 0;
			border-right: 0;
		}
	}
	//Прерывистая граница======================================================
	@mixin dashed-border($dashlength, $spacelength, $borderwidth, $color){
		$percentage: percentage($dashlength / ($dashlength + $spacelength));
		background-image: linear-gradient(to right, $color 0%, $color $percentage, rgba(0, 0, 0, 0) $percengate),
		liner-gradient(to bottom, $color 0%, $color $percengate, rgba(0, 0, 0, 0) $perpecengate),
		liner-gradient(to right, $color 0%, $color $percengate, rgba(0, 0, 0, 0) $percengate),
		liner-gradient(to bottom, $color 0%, $color $percengate, rgba(0, 0, 0, 0) $percengate);
		background-position: (-$spacelength) 0, 0 (-$spacelength), (-$spacelength) 100%, 100% (-$spacelength);
		background-size: ($dashlength + $spacelength) $borderwidth, $borderwidth ($dashlength + $spacelength), ($dashlength + $spacelength) $borderwidth, $borderwidth ($dashlength + $spacelength);
		background-repeat: repeat-x, repeat-y, repeat-x, repeat-y;

	}
//-----------------------------------------------------------------------------

//Трансформация----------------------------------------------------------------
	//Перемещение элемента по трем осям========================================
	@mixin translate3d($x:0,$y:0,$z:0) {
		-webkit-transform: translate3d($x, $y, $z);
		-moz-transform: translate3d($x, $y, $z);
		-ms-transform:translate3d($x, $y, $z);
		-o-transform: translate3d($x, $y, $z);
		transform: translate3d($x, $y, $z);
	}
	// Поворот элемента вокруг своей оси=======================================
	@mixin rotate($angle:0deg) {
		-webkit-transform: rotate($angle);
		-moz-transform: rotate($angle);
		-ms-transform: rotate($angle);
		-o-transform: rotate($angle);
		transform: rotate($angle);
	}
	// Изменение масштаба элемента=============================================
	@mixin scale($value:0px) {
		-webkit-transform: scale($value);
		-moz-transform: scale($value);
		-ms-transform: scale($value);
		-o-transform: scale($value);
		transform: scale($value);
	}
	// Наклон элемента в 2D====================================================
	@mixin skew($angle_x:0deg, $angle_y:0deg) {
		-webkit-transform: skew($angle_x, $angle_y);
		-moz-transform: skew($angle_x, $angle_y);
		-ms-transform: skew($angle_x, $angle_y);
		-o-transform: skew($angle_x, $angle_y);
		transform: skew($angle_x, $angle_y);
	}
	// Анимация изменения элемента=============================================
	@mixin anim($duration:0s, $delay:0s, $property:all, $timing-function:ease) {
		-webkit-transition: $property $duration $timing-function $delay;
		-moz-transition: $property $duration $timing-function $delay;
		-ms-transition: $property $duration $timing-function $delay;;
		-o-transition: $property $duration $timing-function $delay;
		transition: $property $duration $timing-function $delay;
	}
//-----------------------------------------------------------------------------

//Позиционирование-------------------------------------------------------------
	// Позиционирование сверху=================================================
	@mixin position-top($position:absolute, $top:0, $left:0) {
		position: $position;
		top: $top;
		left: $left;
		@content;
	}
	// Позиционирование снизу==================================================
	@mixin position-bottom($position:absolute, $bottom:0, $right:0) {
		position: $position;
		bottom: $bottom;
		right: $right;
		@content;
	}
//-----------------------------------------------------------------------------

// Псевдоэлементы--------------------------------------------------------------
	//Для борьбы с выпаданием флоатов==========================================
	@mixin clearfix {
		&::after {
			content: "";
			display: block;
			height: 0;
			clear: both;
			visibility: hidden;
		}
	}
	//Для перекрытия низлижащих блоков=========================================
	@mixin overlay($color: rgba(0, 0, 0, 0.5)) {
		position: relative;
		z-index: 0;

		&::before {
			content: "";
			z-index: -1;
			position: absolute;
			top: 0;
			bottom: 0;
			left: 50%;
			width: 100vw;
			height: 100%;
			margin: 0 0 0 (-50vw);
			background: $color;
		}
	}
	//Вызов псевдоэлемента before==============================================
	@mixin before() {
		&::before {
			content:"";
			@content;
		}
	}
	//Вызов псевдоэлемента after===============================================
	@mixin after() {
		&::after {
			content:"";
			@content;
		}
	}
	//Вызов псевдоэлементов before и after=====================================
	@mixin before-after() {
		&::before,
		&::after {
			content:"";
			@content;
		}
	}
	//Для стилизации первого символа элемента==================================
	@mixin first-letter() {
		&::first-letter {
			@content;
		}
	}
	//Для стилизации первой строки=============================================
	@mixin first-line() {
		&::first-line {
			@content;
		}
	}
	//Для стилизации выделенного текста========================================
	@mixin selection($background, $color: $white){
		&::-moz-selection,
		&::selection {
			background: $background;
			color: $color;
			@content;
		}
	}
	//Стилизация placeholder===================================================
	@mixin placeholder($color:$black) {
		&::-webkit-input-placeholder,
		&:-moz-placeholder,
		&::-moz-placeholder {
			color: $color;
		}

	}
//-----------------------------------------------------------------------------

//Псевдоклассы-----------------------------------------------------------------
	//Применение стилей либо к первому, либо от $num до первого дочернего элемента
	@mixin first($num) {
		@if $num == 1 {
			&:first-child {
				@content;
			}
		} @else {
			&:nth-child(-n + #{$num}) {
				@content;
			}
		}
	}
	//Применение стилей к элементам от последнего и до $num====================
	@mixin last($num) {
		&:nth-last-child(-n + #{$num}) {
			@content;
		}
	}
	//Применение стилей к элементам после первого и до $num====================
	@mixin after-first($num) {
		&:nth-child(n + #{$num + 1}) {
			@content;
		}
	}
	//Применение стилей к элементам от $num и до последнего====================
	@mixin from-end($num) {
		&:nth-last-child(#{$num}) {
			@content;
		}
	}
	//Применение стилей к элементам между $first и $last=======================
	@mixin between($first, $last) {
		&:nth-child(n + #{$first}):nth-child(-n + #{$last}) {
			@content;
		}
	}
	//Применение стилей ко всем четным элементам между $first и $last==========
	@mixin even-between($first, $last) {
		&:nth-child(even):nth-child(n + #{$first}):nth-child(-n + #{$last}) {
			@content;
		}
	}
	//Применение стилей ко всем нечетным элементам между $first и $last========
	@mixin odd-between($first, $last) {
		&:nth-child(odd):nth-child(n + #{$first}):nth-child(-n + #{$last}) {
			@content;
		}
	}
	//Применение стилей к каждому $num элементу по счету между $first и $last==
	@mixin n-between($num, $first, $last) {
		&:nth-child(#{$num}n):nth-child(n + #{$first}):nth-child(-n + #{$last}) {
			@content;
		}
	}
	//Применение стилей ко всем элементам кроме $num===========================
	@mixin all-but($num) {
		&:not(:nth-child(#{$num})) {
			@content;
		}
	}
	//Применение стилей для каждого $num элемента по счету=====================
	@mixin each($num) {
		&:nth-child(#{$num}n) {
			@content;
		}
	}
	//Пременение стилей к $num элементу по счету с начала и конца==============
	@mixin from-first-last($num) {
		&:nth-child(#{$num}),
		&:nth-last-child(#{$num}) {
			@content;
		}
	}
	//Применение стилей к среднему элементу между первым и $num(работает только с нечетными)
	@mixin middle($num) {
		&:nth-child(#{round($num / 2)}) {
			@content;
		}
	}
	//Применение стилей ко всем элементам кроме первого и последнего===========
	@mixin all-but-first-last($num) {
		&:nth-child(n + #{$num}):nth-last-child(n + #{$num}) {
			@content;
		}
	}
	//Применение стилей к первым элементам своего типа=========================
	@mixin first-type() {
		&:first-of-type {
			@content;
		}
	}
	//Применение стилей к первому дочерниму элементу===========================
	@mixin first() {
		&:first-child{
			@content;
		}
	}
	//Применение стилей к последним элементам своего типа======================
	@mixin last-type() {
		&:last-of-type {
			@content;
		}
	}
	//Применение стилей к последнему дочерниму элементу========================
	@mixin last() {
		&:last-child {
			@content;
		}
	}
	//Применение стилей ко всем четным элементам===============================
	@mixin even() {
		&:nth-child(even) {
			@content;
		}
	}
	//Применение стилей ко всем нечетным элементам=============================
	@mixin odd() {
		&:nth-child(odd) {
			@content;
		}
	}
	//Применение стилей к парвому и последнему элементу========================
	@mixin first-last() {
		&:first-child,
		&:last-child {
			@content;
		}
	}
	//Применение стилей только если элемент родителя уникален==================
	@mixin unique() {
		&:only-child {
			@content;
		}
	}
	//Применение стилей только если элемент родителя не уникален===============
	@mixin not-unique() {
		&:not(:only-child) {
			@content;
		}
	}
	//Примененяется для автоматической сортировки z-index дочерних элементов==
	@mixin child-index($num, $direction: 'forward', $index: 0) {
		@for $i from 1 through $num {
			@if ($direction == 'forward') {
				&:nth-child(#{$i}) {
					z-index: order-index($i, $index);
					@content;
				}
			} @else if ($direction == 'backward') {
				&:nth-last-child(#{$i}) {
					z-index: order-index($i, $index);
					@content;
				}
			}
		}
	}
	//Функция возвращающая z-index для предидущего миксина=====================
	@function order-index($i, $index) {
		@return ($index + $i);
	}
//-----------------------------------------------------------------------------